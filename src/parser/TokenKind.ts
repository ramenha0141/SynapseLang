enum TokenKind {
    // Operators
    MultilineComment,
    SingleLineComment,
    OpenBracket,
    CloseBracket,
    OpenParen,
    CloseParen,
    OpenBrace,
    CloseBrace,
    SemiColon,
    Comma,
    Assign,
    QuestionMark,
    Scope,
    Colon,
    Dot,
    PlusPlus,
    MinusMinus,
    Plus,
    Minus,
    BitNot,
    Not,
    Multiply,
    Divide,
    Modulus,
    Power,
    NullCoalesce,
    Hashtag,
    LeftShiftArithmetic,
    RightShiftArithmetic,
    RightShiftLogical,
    LessThan,
    MoreThan,
    LessThanEquals,
    GreaterThanEquals,
    Equals,
    NotEquals,
    IdentityEquals,
    IdentityNotEquals,
    BitAnd,
    BitXOr,
    BitOr,
    And,
    Or,
    MultiplyAssign,
    DivideAssign,
    ModulusAssign,
    PlusAssign,
    MinusAssign,
    Pipeline,
    // Literals
    NullLiteral,
    BooleanLiteral,
    DecimalIntegerLiteral,
    DecimalFloatLiteral,
    HexIntegerLiteral,
    StringLiteral,
    // Keywords
    From,
    Function,
    Declare,
    New,
    Delete,
    Class,
    Extends,
    Super,
    This,
    Constructor,
    Break,
    Sizeof,
    Case,
    Else,
    Return,
    Void,
    Continue,
    For,
    In,
    Switch,
    While,
    Default,
    If,
    Import,
    As,
    Let,
    Const,
    // Identifier
    Identifier,
    //
    WhiteSpaces,
    LineTerminator,
}
export default TokenKind;